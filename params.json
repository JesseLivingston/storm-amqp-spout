{"tagline":"Allows a Storm topology to consume an AMQP exchange as an input source.","body":"# storm-amqp-spout: AMQP input source for Storm #\r\n\r\nstorm-amqp-spout allows a [Storm][] topology to consume an AMQP queue as an\r\ninput source.  It currently provides:\r\n\r\n * <tt>[AMQPSpout][]</tt>: an implementation of\r\n   [`backtype.storm.topology.IRichSpout`][IRichSpout] that connects to an AMQP\r\n   broker, consumes the messages routed to a specified AMQP queue and emits them\r\n   as Storm tuples.\r\n * <tt>[QueueDeclaration][]</tt>: an interface that encapsulates declaring an\r\n   AMQP queue and setting up any exchange bindings it requires, used by\r\n   AMQPSpout to set up the queue to consume.\r\n * <tt>[ExclusiveQueueWithBinding][]</tt>: a QueueDeclaration suitable for\r\n   prototyping and one-off analytics use cases.\r\n * <tt>[SharedQueueWithBinding][]</tt>: a QueueDeclaration suitable for\r\n   production use cases needing guaranteed processing.\r\n\r\nYou'll need to provide a [Scheme][] to tell AMQPSpout how to interpret the\r\nmessages and turn them into Storm tuples.  See e.g. [storm-json][] if your\r\nmessages are JSON.\r\n\r\n## Documentation ##\r\n\r\nThe Javadocs can be found at [http://code.rapportive.com/storm-amqp-spout]().\r\n\r\n## Usage ##\r\n\r\nTo produce a jar:\r\n\r\n    $ mvn package\r\n\r\nTo install in your local Maven repository:\r\n\r\n    $ mvn install\r\n\r\nTo use in your `pom.xml`:\r\n\r\n```xml\r\n<project>\r\n  <!-- ... -->\r\n  <dependencies>\r\n    <!-- ... -->\r\n    <dependency>\r\n      <groupId>com.rapportive</groupId>\r\n      <artifactId>storm-amqp-spout</artifactId>\r\n      <version>0.1.1</version>\r\n    </dependency>\r\n    <!-- ... -->\r\n  </dependencies>\r\n  <!-- ... -->\r\n</project>\r\n```\r\n\r\n## Caveats ##\r\n\r\nThis is early software.  It has been used at production volumes, but not yet\r\nfor business-critical use cases.  It may break and the API is liable to change\r\ncompletely between releases.  Pull requests, patches and bug reports are very\r\nwelcome.\r\n\r\n**N.B.** if you need to guarantee all messages are reliably processed, you\r\nshould have AMQPSpout consume from a queue that is *not* set as 'exclusive' or\r\n'auto-delete': otherwise if the spout task crashes or is restarted, the queue\r\nwill be deleted and any messages in it lost, as will any messages published\r\nwhile the task remains down.  See [SharedQueueWithBinding][] to declare a\r\nshared queue that allows for guaranteed processing.  (For prototyping, an\r\n[ExclusiveQueueWithBinding][] may be simpler to manage.)\r\n\r\nThis does not currently handle malformed messages very well: the spout worker\r\nwill crash if the provided [Scheme][] fails to deserialise a message.\r\n\r\nThis does not currently support retrying messages in the event of transient\r\nfailure to process: any message which the topology fails to process will simply\r\nbe dropped.  This is to prevent infinite redelivery in the event of\r\nnon-transient failures (e.g. malformed messages, though see previous caveat!).\r\nThis will probably be made configurable in a future release.\r\n\r\n## Compatibility ##\r\n\r\nAMQPSpout has been tested with RabbitMQ 2.3.1, 2.6.1, 2.7.0, 2.8.2, and 3.0.2  It should probably work with other\r\nversions and other AMQP brokers.\r\n\r\n\r\n[Storm]: <https://github.com/nathanmarz/storm>\r\n    \"Storm project homepage\"\r\n[IRichSpout]: <http://nathanmarz.github.com/storm/doc/backtype/storm/topology/IRichSpout.html>\r\n    \"Javadoc for backtype.storm.topology.IRichSpout\"\r\n[Scheme]: <http://nathanmarz.github.com/storm/doc/backtype/storm/spout/Scheme.html>\r\n    \"Javadoc for backtype.storm.spout.Scheme\"\r\n[AMQPSpout]: <http://code.rapportive.com/storm-amqp-spout/doc/com/rapportive/storm/spout/AMQPSpout.html>\r\n    \"Javadoc for AMQPSpout\"\r\n[QueueDeclaration]: <http://code.rapportive.com/storm-amqp-spout/doc/com/rapportive/storm/amqp/QueueDeclaration.html>\r\n    \"Javadoc for QueueDeclaration\"\r\n[ExclusiveQueueWithBinding]: <http://code.rapportive.com/storm-amqp-spout/doc/com/rapportive/storm/amqp/ExclusiveQueueWithBinding.html>\r\n    \"Javadoc for ExclusiveQueueWithBinding\"\r\n[SharedQueueWithBinding]: <http://code.rapportive.com/storm-amqp-spout/doc/com/rapportive/storm/amqp/SharedQueueWithBinding.html>\r\n    \"Javadoc for SharedQueueWithBinding\"\r\n[storm-json]: <https://github.com/rapportive-oss/storm-json>\r\n    \"JSON {,de}serialisation support for Storm\"\r\n","name":"Storm-amqp-spout","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}